# Generated by Django 4.2 on 2023-05-22 18:07

from django.db import migrations, models
import django.db.models.deletion
import django_jsonform.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ComparisonFilter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('ffmpeg_args', django_jsonform.models.fields.ArrayField(base_field=models.CharField(max_length=1999), size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InformationFilter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('ffmpeg_args', django_jsonform.models.fields.ArrayField(base_field=models.CharField(max_length=1999), size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OriginalVideoFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('ffprobe_info', django_jsonform.models.fields.JSONField(blank=True, null=True)),
                ('file_name', models.CharField(blank=True, default='')),
                ('status', models.CharField(choices=[('R', 'Ready'), ('E', 'Encoding child videos'), ('M', 'Computing metrics'), ('D', 'Done'), ('F', 'Failed')], default='R', max_length=1)),
                ('error_message', models.CharField(blank=True, default='', max_length=1024)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoEncoding',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('ffmpeg_args', django_jsonform.models.fields.ArrayField(base_field=models.CharField(max_length=1999), size=None)),
                ('video_extension', models.CharField(blank=True, default='', max_length=5)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InformationFilterResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('output', models.CharField(blank=True, default=True, max_length=1024)),
                ('compute_time', models.FloatField(null=True)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='info_filter_results', to='entities.originalvideofile')),
                ('video_filter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='entities.informationfilter')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EncodedVideoFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('ffprobe_info', django_jsonform.models.fields.JSONField(blank=True, null=True)),
                ('file_name', models.CharField(blank=True, default='')),
                ('encoding_time', models.FloatField(null=True)),
                ('original_video_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encoded_video_files', to='entities.originalvideofile')),
                ('video_encoding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encoded_video_files', to='entities.videoencoding')),
            ],
            options={
                'unique_together': {('original_video_file', 'video_encoding')},
            },
        ),
        migrations.CreateModel(
            name='DecodedVideoFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('ffprobe_info', django_jsonform.models.fields.JSONField(blank=True, null=True)),
                ('file_name', models.CharField(blank=True, default='')),
                ('decoding_time', models.FloatField(null=True)),
                ('encoded_video_file', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='decoded_video_file', to='entities.encodedvideofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComparisonFilterResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('output', models.CharField(blank=True, default=True, max_length=1024)),
                ('compute_time', models.FloatField(null=True)),
                ('reference_video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparison_filter_results', to='entities.originalvideofile')),
                ('video_filter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='entities.comparisonfilter')),
                ('video_to_compare', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.decodedvideofile')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
